{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["\nconst feedbackFormEl = document.querySelector('.feedback-form');  // Клас для форми\n\n// Для зберігання даних форми\nlet formData = {\n    email: \"\",\n    message: \"\"\n};\n\n// Функція для заповнення полів форми, перевірка чи є дані\nconst fillFormFields = () => {\n    const formDataFromLS = JSON.parse(localStorage.getItem('feedback-form-state')); // Передаємо що в локал сторіч та парсимо \n\n    if (formDataFromLS === null) {  // Перевірка якщо ще не вводили дані (null)\n        return;\n    }\n\n    formData = formDataFromLS;\n\n    for (const key in formDataFromLS) { // Перебираємо обєкт та заповнюємо елементи форм\n        if (formDataFromLS.hasOwnProperty(key)) {// Перевірка властивості власна чи ні\n            const inputElement = feedbackFormEl.elements[key];\n            if (inputElement) {\n                inputElement.value = formDataFromLS[key];\n            }\n        }\n    }\n};\n\n// Виклик функції для заповнення  форми при завантаженні сторінки\nfillFormFields();\n\n// Функція обробник змін у полях форми\nconst onFormFieldChange = event => {\n    const fieldName = event.target.name; // Зчитуємо з інпута значення атрибута name\n    const fieldValue = event.target.value.trim();  // Зчитуємо значення які вводять та видаляємо пробіли з країв\n\n    formData[fieldName] = fieldValue; // Записуємо все в formData\n\n    localStorage.setItem('feedback-form-state', JSON.stringify(formData)); // Відправляємо в локал сторіч під ключ-значення обєкт що вводять\n}\n// Функція для обробки відправлення форми\nconst onFeedbackFormSubmit = event => {\n    event.preventDefault();  // Прибира автоматичне перезавантаження сторінки\n\n    if (!formData.email || !formData.message) {  // Якщо не всі поля введені\n        alert('Fill please all fields');\n        return;\n    }\n\n    console.log(formData);\n\n    localStorage.removeItem('feedback-form-state'); // Очищаємо дані локал сторіч по ключу\n\n    formData.email = \"\"; // Очищення обєкта formData\n    formData.message = \"\";\n\n    feedbackFormEl.reset(); // Очищаємо поля вводу\n};\n\n// Додавання слухачів подій\nfeedbackFormEl.addEventListener('input', onFormFieldChange);\nfeedbackFormEl.addEventListener('submit', onFeedbackFormSubmit);"],"names":["feedbackFormEl","formData","fillFormFields","formDataFromLS","key","inputElement","onFormFieldChange","event","fieldName","fieldValue","onFeedbackFormSubmit"],"mappings":"mCACA,MAAMA,EAAiB,SAAS,cAAc,gBAAgB,EAG9D,IAAIC,EAAW,CACX,MAAO,GACP,QAAS,EACb,EAGA,MAAMC,EAAiB,IAAM,CACzB,MAAMC,EAAiB,KAAK,MAAM,aAAa,QAAQ,qBAAqB,CAAC,EAE7E,GAAIA,IAAmB,KAIvB,CAAAF,EAAWE,EAEX,UAAWC,KAAOD,EACd,GAAIA,EAAe,eAAeC,CAAG,EAAG,CACpC,MAAMC,EAAeL,EAAe,SAASI,CAAG,EAC5CC,IACAA,EAAa,MAAQF,EAAeC,CAAG,EAE9C,EAET,EAGAF,IAGA,MAAMI,EAAoBC,GAAS,CAC/B,MAAMC,EAAYD,EAAM,OAAO,KACzBE,EAAaF,EAAM,OAAO,MAAM,KAAI,EAE1CN,EAASO,CAAS,EAAIC,EAEtB,aAAa,QAAQ,sBAAuB,KAAK,UAAUR,CAAQ,CAAC,CACxE,EAEMS,EAAuBH,GAAS,CAGlC,GAFAA,EAAM,eAAc,EAEhB,CAACN,EAAS,OAAS,CAACA,EAAS,QAAS,CACtC,MAAM,wBAAwB,EAC9B,MACH,CAED,QAAQ,IAAIA,CAAQ,EAEpB,aAAa,WAAW,qBAAqB,EAE7CA,EAAS,MAAQ,GACjBA,EAAS,QAAU,GAEnBD,EAAe,MAAK,CACxB,EAGAA,EAAe,iBAAiB,QAASM,CAAiB,EAC1DN,EAAe,iBAAiB,SAAUU,CAAoB"}